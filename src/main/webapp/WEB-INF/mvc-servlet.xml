<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
	">

	<context:property-placeholder location="classpath:jdbc.properties" />


	<context:component-scan base-package="cn"></context:component-scan>
	
	<!-- 配置视图资源解析器 -->
	<!-- <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean> -->
	
	
	<!--国际化： 该拦截器拦截界面传来的url上的语言参数 只会拦截JSP经过action后，才会将语言设置存放到sesion中，同时从session中取值-->
	<mvc:interceptors>
		<bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
			<!-- 默认value值locale，可以省略配置 <property name="paramName" value=""></property>
				当value值修改后，传过来的参数key要修改为value值
			 --> 
			<property name="paramName" value="language"></property>
		</bean>
		
		<!-- 定义自己实现的拦截器 -->
		<mvc:interceptor>
			<mvc:mapping path="/inter"/> <!-- /**拦截所有的action -->
			<bean class="cn.et.lesson5.MyInterceptor"></bean>
		</mvc:interceptor>
		<!-- 防止重复提交 -->
		<mvc:interceptor>
			<mvc:mapping path="/fee"/> <!-- /**拦截所有的action -->
			<bean class="cn.et.lesson5.TokenInterceptor"></bean>
		</mvc:interceptor>
		
	</mvc:interceptors>
	
	<!--界面传来的url上的语言参数需要存放的一个地方，当用户再次访问时，使用之前设置的语言
		bean名：localeResolver
	  -->
	<bean id="localeResolver"   class="org.springframework.web.servlet.i18n.SessionLocaleResolver"></bean>
	
	<!-- 表单验证国际化 -->
	<bean  id="localValidatorFactoryBean" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="validationMessageSource" ref="messageSource"></property>
	</bean>
	
	<!-- springmvc 配置拦截 / 所有资源都被拦截 图片无法展示  将除控制层以外的资源交给servlet处理 -->
	<mvc:default-servlet-handler/>
	
	
	<!-- 将springmvc注解的action交给springmvc处理 -->
	<mvc:annotation-driven validator="localValidatorFactoryBean">
	
	<mvc:message-converters>
        <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter">
          <property name="supportedMediaTypes">
    				<list>
    					<!-- 请求支持格式 -->
    					<value>text/html</value>
    					<!-- 请求类型-->
    					<value>application/x-www-form-urlencoded</value>
    				</list>
    			</property>
        </bean>
        <!-- 配置返回对应解析成json的消息转换器 -->
    	<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
    			<property name="supportedMediaTypes">
    				<list>
    					<value>text/html</value>
    					<value>application/x-www-form-urlencoded</value>
    				</list>
    			</property>
    	</bean>
    </mvc:message-converters>
	
	</mvc:annotation-driven>
	
	<!-- 静态资源共享，位于WEB-INF下的文件是访问不了的，可以通过下面的配置-->
	<mvc:resources mapping="/img/**" 
                           location="/WEB-INF/img/"/>
	
	

	<!-- 启用文件上传 -->
	<bean id="multipartResolver"   class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 限制文件上传大小 5M -->
		<property name="maxUploadSize" value="5242880"></property>
	</bean>

	<bean name="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">

		<property name="driverClassName" value="${driverClassName}" />

		<property name="url" value="${url}" />

		<property name="username" value="${usernamed}" />

		<property name="password" value="${password}" />

	</bean>

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- 事务 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<tx:advice id="myAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="update*" />
			<tx:method name="save*"  />
			<tx:method name="delete*" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>


	<aop:config>
		<aop:pointcut expression="execution(*  cn.*..*.service.*.*(..))"
			id="cut" />
		<aop:advisor advice-ref="myAdvice" pointcut-ref="cut" />
	</aop:config>

</beans>